// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CabinClass int32

const (
	// 默认所有
	CabinClass_A CabinClass = 0
	CabinClass_F CabinClass = 1
	CabinClass_B CabinClass = 2
	CabinClass_E CabinClass = 3
	CabinClass_P CabinClass = 4
)

var CabinClass_name = map[int32]string{
	0: "A",
	1: "F",
	2: "B",
	3: "E",
	4: "P",
}

var CabinClass_value = map[string]int32{
	"A": 0,
	"F": 1,
	"B": 2,
	"E": 3,
	"P": 4,
}

func (x CabinClass) String() string {
	return proto.EnumName(CabinClass_name, int32(x))
}

func (CabinClass) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

type FareType int32

const (
	FareType_PRIVATE   FareType = 0
	FareType_PUBLISHED FareType = 1
)

var FareType_name = map[int32]string{
	0: "PRIVATE",
	1: "PUBLISHED",
}

var FareType_value = map[string]int32{
	"PRIVATE":   0,
	"PUBLISHED": 1,
}

func (x FareType) String() string {
	return proto.EnumName(FareType_name, int32(x))
}

func (FareType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

type ProviderType int32

const (
	ProviderType_PROVIDER_API           ProviderType = 0
	ProviderType_PROVIDER_SABRE_1B      ProviderType = 1
	ProviderType_PROVIDER_SABRE_1S      ProviderType = 2
	ProviderType_PROVIDER_AMADEUS_1A    ProviderType = 3
	ProviderType_PROVIDER_TRAVELPORT_1P ProviderType = 4
	ProviderType_PROVIDER_TRAVELPORT_1G ProviderType = 5
	ProviderType_PROVIDER_ETERM         ProviderType = 6
	ProviderType_PROVIDER_OTHER         ProviderType = 7
)

var ProviderType_name = map[int32]string{
	0: "PROVIDER_API",
	1: "PROVIDER_SABRE_1B",
	2: "PROVIDER_SABRE_1S",
	3: "PROVIDER_AMADEUS_1A",
	4: "PROVIDER_TRAVELPORT_1P",
	5: "PROVIDER_TRAVELPORT_1G",
	6: "PROVIDER_ETERM",
	7: "PROVIDER_OTHER",
}

var ProviderType_value = map[string]int32{
	"PROVIDER_API":           0,
	"PROVIDER_SABRE_1B":      1,
	"PROVIDER_SABRE_1S":      2,
	"PROVIDER_AMADEUS_1A":    3,
	"PROVIDER_TRAVELPORT_1P": 4,
	"PROVIDER_TRAVELPORT_1G": 5,
	"PROVIDER_ETERM":         6,
	"PROVIDER_OTHER":         7,
}

func (x ProviderType) String() string {
	return proto.EnumName(ProviderType_name, int32(x))
}

func (ProviderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

type TraceSpan_TraceType int32

const (
	TraceSpan_None   TraceSpan_TraceType = 0
	TraceSpan_WB     TraceSpan_TraceType = 1
	TraceSpan_POLICY TraceSpan_TraceType = 2
	TraceSpan_OTHERS TraceSpan_TraceType = 3
)

var TraceSpan_TraceType_name = map[int32]string{
	0: "None",
	1: "WB",
	2: "POLICY",
	3: "OTHERS",
}

var TraceSpan_TraceType_value = map[string]int32{
	"None":   0,
	"WB":     1,
	"POLICY": 2,
	"OTHERS": 3,
}

func (x TraceSpan_TraceType) String() string {
	return proto.EnumName(TraceSpan_TraceType_name, int32(x))
}

func (TraceSpan_TraceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{14, 0}
}

type SimpleRequest struct {
	Cid                  string   `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	TraceId              string   `protobuf:"bytes,2,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleRequest) Reset()         { *m = SimpleRequest{} }
func (m *SimpleRequest) String() string { return proto.CompactTextString(m) }
func (*SimpleRequest) ProtoMessage()    {}
func (*SimpleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *SimpleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleRequest.Unmarshal(m, b)
}
func (m *SimpleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleRequest.Marshal(b, m, deterministic)
}
func (m *SimpleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleRequest.Merge(m, src)
}
func (m *SimpleRequest) XXX_Size() int {
	return xxx_messageInfo_SimpleRequest.Size(m)
}
func (m *SimpleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleRequest proto.InternalMessageInfo

func (m *SimpleRequest) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *SimpleRequest) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

type SimpleResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimpleResponse) Reset()         { *m = SimpleResponse{} }
func (m *SimpleResponse) String() string { return proto.CompactTextString(m) }
func (*SimpleResponse) ProtoMessage()    {}
func (*SimpleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *SimpleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimpleResponse.Unmarshal(m, b)
}
func (m *SimpleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimpleResponse.Marshal(b, m, deterministic)
}
func (m *SimpleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimpleResponse.Merge(m, src)
}
func (m *SimpleResponse) XXX_Size() int {
	return xxx_messageInfo_SimpleResponse.Size(m)
}
func (m *SimpleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SimpleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SimpleResponse proto.InternalMessageInfo

func (m *SimpleResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *SimpleResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Trip struct {
	DepartureCode        string   `protobuf:"bytes,1,opt,name=departure_code,json=departureCode,proto3" json:"departure_code,omitempty"`
	ArrivalCode          string   `protobuf:"bytes,2,opt,name=arrival_code,json=arrivalCode,proto3" json:"arrival_code,omitempty"`
	DepartureDate        string   `protobuf:"bytes,3,opt,name=departure_date,json=departureDate,proto3" json:"departure_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trip) Reset()         { *m = Trip{} }
func (m *Trip) String() string { return proto.CompactTextString(m) }
func (*Trip) ProtoMessage()    {}
func (*Trip) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *Trip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trip.Unmarshal(m, b)
}
func (m *Trip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trip.Marshal(b, m, deterministic)
}
func (m *Trip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trip.Merge(m, src)
}
func (m *Trip) XXX_Size() int {
	return xxx_messageInfo_Trip.Size(m)
}
func (m *Trip) XXX_DiscardUnknown() {
	xxx_messageInfo_Trip.DiscardUnknown(m)
}

var xxx_messageInfo_Trip proto.InternalMessageInfo

func (m *Trip) GetDepartureCode() string {
	if m != nil {
		return m.DepartureCode
	}
	return ""
}

func (m *Trip) GetArrivalCode() string {
	if m != nil {
		return m.ArrivalCode
	}
	return ""
}

func (m *Trip) GetDepartureDate() string {
	if m != nil {
		return m.DepartureDate
	}
	return ""
}

type YuetuSearchRequest struct {
	BaseRequest          *SimpleRequest `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	Trip                 *Trip          `protobuf:"bytes,2,opt,name=trip,proto3" json:"trip,omitempty"`
	Cabin                CabinClass     `protobuf:"varint,3,opt,name=cabin,proto3,enum=protos.CabinClass" json:"cabin,omitempty"`
	AdultNum             int32          `protobuf:"varint,4,opt,name=adult_num,json=adultNum,proto3" json:"adult_num,omitempty"`
	ChildNum             int32          `protobuf:"varint,5,opt,name=child_num,json=childNum,proto3" json:"child_num,omitempty"`
	InfantNum            int32          `protobuf:"varint,6,opt,name=infant_num,json=infantNum,proto3" json:"infant_num,omitempty"`
	BypassCache          bool           `protobuf:"varint,7,opt,name=bypass_cache,json=bypassCache,proto3" json:"bypass_cache,omitempty"`
	GodPerspective       bool           `protobuf:"varint,8,opt,name=god_perspective,json=godPerspective,proto3" json:"god_perspective,omitempty"`
	TargetProviders      []string       `protobuf:"bytes,9,rep,name=target_providers,json=targetProviders,proto3" json:"target_providers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *YuetuSearchRequest) Reset()         { *m = YuetuSearchRequest{} }
func (m *YuetuSearchRequest) String() string { return proto.CompactTextString(m) }
func (*YuetuSearchRequest) ProtoMessage()    {}
func (*YuetuSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3}
}

func (m *YuetuSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YuetuSearchRequest.Unmarshal(m, b)
}
func (m *YuetuSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YuetuSearchRequest.Marshal(b, m, deterministic)
}
func (m *YuetuSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YuetuSearchRequest.Merge(m, src)
}
func (m *YuetuSearchRequest) XXX_Size() int {
	return xxx_messageInfo_YuetuSearchRequest.Size(m)
}
func (m *YuetuSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_YuetuSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_YuetuSearchRequest proto.InternalMessageInfo

func (m *YuetuSearchRequest) GetBaseRequest() *SimpleRequest {
	if m != nil {
		return m.BaseRequest
	}
	return nil
}

func (m *YuetuSearchRequest) GetTrip() *Trip {
	if m != nil {
		return m.Trip
	}
	return nil
}

func (m *YuetuSearchRequest) GetCabin() CabinClass {
	if m != nil {
		return m.Cabin
	}
	return CabinClass_A
}

func (m *YuetuSearchRequest) GetAdultNum() int32 {
	if m != nil {
		return m.AdultNum
	}
	return 0
}

func (m *YuetuSearchRequest) GetChildNum() int32 {
	if m != nil {
		return m.ChildNum
	}
	return 0
}

func (m *YuetuSearchRequest) GetInfantNum() int32 {
	if m != nil {
		return m.InfantNum
	}
	return 0
}

func (m *YuetuSearchRequest) GetBypassCache() bool {
	if m != nil {
		return m.BypassCache
	}
	return false
}

func (m *YuetuSearchRequest) GetGodPerspective() bool {
	if m != nil {
		return m.GodPerspective
	}
	return false
}

func (m *YuetuSearchRequest) GetTargetProviders() []string {
	if m != nil {
		return m.TargetProviders
	}
	return nil
}

type YuetuSearchResponse struct {
	BaseResponse         *SimpleResponse `protobuf:"bytes,1,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
	Routing              []*Routing      `protobuf:"bytes,2,rep,name=routing,proto3" json:"routing,omitempty"`
	TraceSpans           []*TraceSpan    `protobuf:"bytes,3,rep,name=trace_spans,json=traceSpans,proto3" json:"trace_spans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *YuetuSearchResponse) Reset()         { *m = YuetuSearchResponse{} }
func (m *YuetuSearchResponse) String() string { return proto.CompactTextString(m) }
func (*YuetuSearchResponse) ProtoMessage()    {}
func (*YuetuSearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{4}
}

func (m *YuetuSearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YuetuSearchResponse.Unmarshal(m, b)
}
func (m *YuetuSearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YuetuSearchResponse.Marshal(b, m, deterministic)
}
func (m *YuetuSearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YuetuSearchResponse.Merge(m, src)
}
func (m *YuetuSearchResponse) XXX_Size() int {
	return xxx_messageInfo_YuetuSearchResponse.Size(m)
}
func (m *YuetuSearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_YuetuSearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_YuetuSearchResponse proto.InternalMessageInfo

func (m *YuetuSearchResponse) GetBaseResponse() *SimpleResponse {
	if m != nil {
		return m.BaseResponse
	}
	return nil
}

func (m *YuetuSearchResponse) GetRouting() []*Routing {
	if m != nil {
		return m.Routing
	}
	return nil
}

func (m *YuetuSearchResponse) GetTraceSpans() []*TraceSpan {
	if m != nil {
		return m.TraceSpans
	}
	return nil
}

type Routing struct {
	Data                   string       `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Itinerary              []*Itinerary `protobuf:"bytes,2,rep,name=itinerary,proto3" json:"itinerary,omitempty"`
	AdultPrice             float64      `protobuf:"fixed64,3,opt,name=adult_price,json=adultPrice,proto3" json:"adult_price,omitempty"`
	AdultTax               float64      `protobuf:"fixed64,4,opt,name=adult_tax,json=adultTax,proto3" json:"adult_tax,omitempty"`
	ChildPrice             float64      `protobuf:"fixed64,5,opt,name=child_price,json=childPrice,proto3" json:"child_price,omitempty"`
	ChildTax               float64      `protobuf:"fixed64,6,opt,name=child_tax,json=childTax,proto3" json:"child_tax,omitempty"`
	InfantPrice            float64      `protobuf:"fixed64,7,opt,name=infant_price,json=infantPrice,proto3" json:"infant_price,omitempty"`
	InfantTax              float64      `protobuf:"fixed64,8,opt,name=infant_tax,json=infantTax,proto3" json:"infant_tax,omitempty"`
	AdultTaxType           int32        `protobuf:"varint,9,opt,name=adult_tax_type,json=adultTaxType,proto3" json:"adult_tax_type,omitempty"`
	ChildTaxType           int32        `protobuf:"varint,10,opt,name=child_tax_type,json=childTaxType,proto3" json:"child_tax_type,omitempty"`
	InfantTaxType          int32        `protobuf:"varint,11,opt,name=infant_tax_type,json=infantTaxType,proto3" json:"infant_tax_type,omitempty"`
	PriceType              int32        `protobuf:"varint,12,opt,name=price_type,json=priceType,proto3" json:"price_type,omitempty"`
	ApplyType              int32        `protobuf:"varint,13,opt,name=apply_type,json=applyType,proto3" json:"apply_type,omitempty"`
	Currency               string       `protobuf:"bytes,14,opt,name=currency,proto3" json:"currency,omitempty"`
	FareType               FareType     `protobuf:"varint,15,opt,name=fare_type,json=fareType,proto3,enum=protos.FareType" json:"fare_type,omitempty"`
	ValidatingCarrier      string       `protobuf:"bytes,16,opt,name=validating_carrier,json=validatingCarrier,proto3" json:"validating_carrier,omitempty"`
	Seats                  int32        `protobuf:"varint,17,opt,name=seats,proto3" json:"seats,omitempty"`
	FareBasis              string       `protobuf:"bytes,18,opt,name=fare_basis,json=fareBasis,proto3" json:"fare_basis,omitempty"`
	ChildFareBasis         string       `protobuf:"bytes,19,opt,name=child_fare_basis,json=childFareBasis,proto3" json:"child_fare_basis,omitempty"`
	MultiTicket            bool         `protobuf:"varint,20,opt,name=multi_ticket,json=multiTicket,proto3" json:"multi_ticket,omitempty"`
	AdultYrTax             float64      `protobuf:"fixed64,21,opt,name=adult_yr_tax,json=adultYrTax,proto3" json:"adult_yr_tax,omitempty"`
	AdultYqTax             float64      `protobuf:"fixed64,22,opt,name=adult_yq_tax,json=adultYqTax,proto3" json:"adult_yq_tax,omitempty"`
	AdultUoTax             float64      `protobuf:"fixed64,23,opt,name=adult_uo_tax,json=adultUoTax,proto3" json:"adult_uo_tax,omitempty"`
	ChildYrTax             float64      `protobuf:"fixed64,24,opt,name=child_yr_tax,json=childYrTax,proto3" json:"child_yr_tax,omitempty"`
	ChildYqTax             float64      `protobuf:"fixed64,25,opt,name=child_yq_tax,json=childYqTax,proto3" json:"child_yq_tax,omitempty"`
	ChildUoTax             float64      `protobuf:"fixed64,26,opt,name=child_uo_tax,json=childUoTax,proto3" json:"child_uo_tax,omitempty"`
	Eligibility            string       `protobuf:"bytes,27,opt,name=eligibility,proto3" json:"eligibility,omitempty"`
	TicketTimeLimitMinutes int32        `protobuf:"varint,28,opt,name=ticket_time_limit_minutes,json=ticketTimeLimitMinutes,proto3" json:"ticket_time_limit_minutes,omitempty"`
	NationalType           int32        `protobuf:"varint,29,opt,name=national_type,json=nationalType,proto3" json:"national_type,omitempty"`
	Nationality            string       `protobuf:"bytes,30,opt,name=nationality,proto3" json:"nationality,omitempty"`
	SuitAge                string       `protobuf:"bytes,31,opt,name=suit_age,json=suitAge,proto3" json:"suit_age,omitempty"`
	TicketInvoiceType      int32        `protobuf:"varint,32,opt,name=ticket_invoice_type,json=ticketInvoiceType,proto3" json:"ticket_invoice_type,omitempty"`
	// Rule rule = 33;
	AdultType    string     `protobuf:"bytes,34,opt,name=adult_type,json=adultType,proto3" json:"adult_type,omitempty"`
	ChildType    string     `protobuf:"bytes,35,opt,name=child_type,json=childType,proto3" json:"child_type,omitempty"`
	InfantType   string     `protobuf:"bytes,36,opt,name=infant_type,json=infantType,proto3" json:"infant_type,omitempty"`
	RoutingId    string     `protobuf:"bytes,37,opt,name=routing_id,json=routingId,proto3" json:"routing_id,omitempty"`
	Cabin        CabinClass `protobuf:"varint,38,opt,name=cabin,proto3,enum=protos.CabinClass" json:"cabin,omitempty"`
	AccountCode  string     `protobuf:"bytes,39,opt,name=account_code,json=accountCode,proto3" json:"account_code,omitempty"`
	FareCalcLine string     `protobuf:"bytes,40,opt,name=fare_calc_line,json=fareCalcLine,proto3" json:"fare_calc_line,omitempty"`
	//qunar-snail-params
	Tof                 string                `protobuf:"bytes,41,opt,name=tof,proto3" json:"tof,omitempty"`
	Arf                 string                `protobuf:"bytes,42,opt,name=arf,proto3" json:"arf,omitempty"`
	Ctof                string                `protobuf:"bytes,43,opt,name=ctof,proto3" json:"ctof,omitempty"`
	ViewPrice           float64               `protobuf:"fixed64,44,opt,name=view_price,json=viewPrice,proto3" json:"view_price,omitempty"`
	TicketPrice         float64               `protobuf:"fixed64,45,opt,name=ticket_price,json=ticketPrice,proto3" json:"ticket_price,omitempty"`
	ChildTicketPrice    float64               `protobuf:"fixed64,46,opt,name=child_ticket_price,json=childTicketPrice,proto3" json:"child_ticket_price,omitempty"`
	AduTag              string                `protobuf:"bytes,47,opt,name=adu_tag,json=aduTag,proto3" json:"adu_tag,omitempty"`
	ChiTag              string                `protobuf:"bytes,48,opt,name=chi_tag,json=chiTag,proto3" json:"chi_tag,omitempty"`
	ProviderType        ProviderType          `protobuf:"varint,49,opt,name=provider_type,json=providerType,proto3,enum=protos.ProviderType" json:"provider_type,omitempty"`
	FlightCode          string                `protobuf:"bytes,50,opt,name=flight_code,json=flightCode,proto3" json:"flight_code,omitempty"`
	OriAdultPrice       float64               `protobuf:"fixed64,51,opt,name=ori_adult_price,json=oriAdultPrice,proto3" json:"ori_adult_price,omitempty"`
	OriAdultTax         float64               `protobuf:"fixed64,52,opt,name=ori_adult_tax,json=oriAdultTax,proto3" json:"ori_adult_tax,omitempty"`
	OriChildPrice       float64               `protobuf:"fixed64,53,opt,name=ori_child_price,json=oriChildPrice,proto3" json:"ori_child_price,omitempty"`
	OriChildTax         float64               `protobuf:"fixed64,54,opt,name=ori_child_tax,json=oriChildTax,proto3" json:"ori_child_tax,omitempty"`
	OriInfantPrice      float64               `protobuf:"fixed64,55,opt,name=ori_infant_price,json=oriInfantPrice,proto3" json:"ori_infant_price,omitempty"`
	OriInfantTax        float64               `protobuf:"fixed64,56,opt,name=ori_infant_tax,json=oriInfantTax,proto3" json:"ori_infant_tax,omitempty"`
	PosLocation         string                `protobuf:"bytes,57,opt,name=pos_location,json=posLocation,proto3" json:"pos_location,omitempty"`
	ItinerarySplicing   bool                  `protobuf:"varint,58,opt,name=itinerary_splicing,json=itinerarySplicing,proto3" json:"itinerary_splicing,omitempty"`
	CurrencyConversions []*CurrencyConversion `protobuf:"bytes,59,rep,name=currency_conversions,json=currencyConversions,proto3" json:"currency_conversions,omitempty"`
	MasterCurrency      string                `protobuf:"bytes,60,opt,name=master_currency,json=masterCurrency,proto3" json:"master_currency,omitempty"`
	ProviderCurrency    string                `protobuf:"bytes,61,opt,name=provider_currency,json=providerCurrency,proto3" json:"provider_currency,omitempty"`
	ProviderName        string                `protobuf:"bytes,62,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	// repeated PriceChangesByPolicy policy_price_changes = 63;
	TraceSpans    []*TraceSpan    `protobuf:"bytes,64,rep,name=trace_spans,json=traceSpans,proto3" json:"trace_spans,omitempty"`
	EvictionMarks []*EvictionMark `protobuf:"bytes,65,rep,name=eviction_marks,json=evictionMarks,proto3" json:"eviction_marks,omitempty"`
	// skypicker
	BookingToken string `protobuf:"bytes,66,opt,name=booking_token,json=bookingToken,proto3" json:"booking_token,omitempty"`
	// 提供给平台的公布价 原始价, 转到平台币种
	AdultPublishPrice  float64             `protobuf:"fixed64,67,opt,name=adult_publish_price,json=adultPublishPrice,proto3" json:"adult_publish_price,omitempty"`
	AdultPublishTax    float64             `protobuf:"fixed64,68,opt,name=adult_publish_tax,json=adultPublishTax,proto3" json:"adult_publish_tax,omitempty"`
	ChildPublishPrice  float64             `protobuf:"fixed64,69,opt,name=child_publish_price,json=childPublishPrice,proto3" json:"child_publish_price,omitempty"`
	ChildPublishTax    float64             `protobuf:"fixed64,70,opt,name=child_publish_tax,json=childPublishTax,proto3" json:"child_publish_tax,omitempty"`
	InfantPublishPrice float64             `protobuf:"fixed64,71,opt,name=infant_publish_price,json=infantPublishPrice,proto3" json:"infant_publish_price,omitempty"`
	InfantPublishTax   float64             `protobuf:"fixed64,72,opt,name=infant_publish_tax,json=infantPublishTax,proto3" json:"infant_publish_tax,omitempty"`
	ValidSegmentsCount int32               `protobuf:"varint,73,opt,name=valid_segments_count,json=validSegmentsCount,proto3" json:"valid_segments_count,omitempty"`
	TicketSource       int32               `protobuf:"varint,74,opt,name=ticket_source,json=ticketSource,proto3" json:"ticket_source,omitempty"`
	SaleBaggage        bool                `protobuf:"varint,75,opt,name=sale_baggage,json=saleBaggage,proto3" json:"sale_baggage,omitempty"`
	OnlineCheckIn      bool                `protobuf:"varint,76,opt,name=online_check_in,json=onlineCheckIn,proto3" json:"online_check_in,omitempty"`
	AiPolicyChangeInfo *AIPolicyChangeInfo `protobuf:"bytes,77,opt,name=ai_policy_change_info,json=aiPolicyChangeInfo,proto3" json:"ai_policy_change_info,omitempty"`
	// unififi
	Payload     string `protobuf:"bytes,78,opt,name=payload,proto3" json:"payload,omitempty"`
	RoutingType string `protobuf:"bytes,79,opt,name=routing_type,json=routingType,proto3" json:"routing_type,omitempty"`
	// sabre跨天出票专用字段
	NextDayPurchase bool   `protobuf:"varint,80,opt,name=next_day_purchase,json=nextDayPurchase,proto3" json:"next_day_purchase,omitempty"`
	PurchaseDate    string `protobuf:"bytes,81,opt,name=purchase_date,json=purchaseDate,proto3" json:"purchase_date,omitempty"`
	EarliestTktTime string `protobuf:"bytes,82,opt,name=earliest_tkt_time,json=earliestTktTime,proto3" json:"earliest_tkt_time,omitempty"`
	// google.protobuf.Timestamp birth_time = 83;  这个 routing 的生成时间
	ProviderPcc          string   `protobuf:"bytes,84,opt,name=provider_pcc,json=providerPcc,proto3" json:"provider_pcc,omitempty"`
	SearchResponseTime   string   `protobuf:"bytes,85,opt,name=search_response_time,json=searchResponseTime,proto3" json:"search_response_time,omitempty"`
	ActualProvider       string   `protobuf:"bytes,86,opt,name=actual_provider,json=actualProvider,proto3" json:"actual_provider,omitempty"`
	ProviderLocation     string   `protobuf:"bytes,87,opt,name=provider_location,json=providerLocation,proto3" json:"provider_location,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Routing) Reset()         { *m = Routing{} }
func (m *Routing) String() string { return proto.CompactTextString(m) }
func (*Routing) ProtoMessage()    {}
func (*Routing) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{5}
}

func (m *Routing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Routing.Unmarshal(m, b)
}
func (m *Routing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Routing.Marshal(b, m, deterministic)
}
func (m *Routing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Routing.Merge(m, src)
}
func (m *Routing) XXX_Size() int {
	return xxx_messageInfo_Routing.Size(m)
}
func (m *Routing) XXX_DiscardUnknown() {
	xxx_messageInfo_Routing.DiscardUnknown(m)
}

var xxx_messageInfo_Routing proto.InternalMessageInfo

func (m *Routing) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Routing) GetItinerary() []*Itinerary {
	if m != nil {
		return m.Itinerary
	}
	return nil
}

func (m *Routing) GetAdultPrice() float64 {
	if m != nil {
		return m.AdultPrice
	}
	return 0
}

func (m *Routing) GetAdultTax() float64 {
	if m != nil {
		return m.AdultTax
	}
	return 0
}

func (m *Routing) GetChildPrice() float64 {
	if m != nil {
		return m.ChildPrice
	}
	return 0
}

func (m *Routing) GetChildTax() float64 {
	if m != nil {
		return m.ChildTax
	}
	return 0
}

func (m *Routing) GetInfantPrice() float64 {
	if m != nil {
		return m.InfantPrice
	}
	return 0
}

func (m *Routing) GetInfantTax() float64 {
	if m != nil {
		return m.InfantTax
	}
	return 0
}

func (m *Routing) GetAdultTaxType() int32 {
	if m != nil {
		return m.AdultTaxType
	}
	return 0
}

func (m *Routing) GetChildTaxType() int32 {
	if m != nil {
		return m.ChildTaxType
	}
	return 0
}

func (m *Routing) GetInfantTaxType() int32 {
	if m != nil {
		return m.InfantTaxType
	}
	return 0
}

func (m *Routing) GetPriceType() int32 {
	if m != nil {
		return m.PriceType
	}
	return 0
}

func (m *Routing) GetApplyType() int32 {
	if m != nil {
		return m.ApplyType
	}
	return 0
}

func (m *Routing) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Routing) GetFareType() FareType {
	if m != nil {
		return m.FareType
	}
	return FareType_PRIVATE
}

func (m *Routing) GetValidatingCarrier() string {
	if m != nil {
		return m.ValidatingCarrier
	}
	return ""
}

func (m *Routing) GetSeats() int32 {
	if m != nil {
		return m.Seats
	}
	return 0
}

func (m *Routing) GetFareBasis() string {
	if m != nil {
		return m.FareBasis
	}
	return ""
}

func (m *Routing) GetChildFareBasis() string {
	if m != nil {
		return m.ChildFareBasis
	}
	return ""
}

func (m *Routing) GetMultiTicket() bool {
	if m != nil {
		return m.MultiTicket
	}
	return false
}

func (m *Routing) GetAdultYrTax() float64 {
	if m != nil {
		return m.AdultYrTax
	}
	return 0
}

func (m *Routing) GetAdultYqTax() float64 {
	if m != nil {
		return m.AdultYqTax
	}
	return 0
}

func (m *Routing) GetAdultUoTax() float64 {
	if m != nil {
		return m.AdultUoTax
	}
	return 0
}

func (m *Routing) GetChildYrTax() float64 {
	if m != nil {
		return m.ChildYrTax
	}
	return 0
}

func (m *Routing) GetChildYqTax() float64 {
	if m != nil {
		return m.ChildYqTax
	}
	return 0
}

func (m *Routing) GetChildUoTax() float64 {
	if m != nil {
		return m.ChildUoTax
	}
	return 0
}

func (m *Routing) GetEligibility() string {
	if m != nil {
		return m.Eligibility
	}
	return ""
}

func (m *Routing) GetTicketTimeLimitMinutes() int32 {
	if m != nil {
		return m.TicketTimeLimitMinutes
	}
	return 0
}

func (m *Routing) GetNationalType() int32 {
	if m != nil {
		return m.NationalType
	}
	return 0
}

func (m *Routing) GetNationality() string {
	if m != nil {
		return m.Nationality
	}
	return ""
}

func (m *Routing) GetSuitAge() string {
	if m != nil {
		return m.SuitAge
	}
	return ""
}

func (m *Routing) GetTicketInvoiceType() int32 {
	if m != nil {
		return m.TicketInvoiceType
	}
	return 0
}

func (m *Routing) GetAdultType() string {
	if m != nil {
		return m.AdultType
	}
	return ""
}

func (m *Routing) GetChildType() string {
	if m != nil {
		return m.ChildType
	}
	return ""
}

func (m *Routing) GetInfantType() string {
	if m != nil {
		return m.InfantType
	}
	return ""
}

func (m *Routing) GetRoutingId() string {
	if m != nil {
		return m.RoutingId
	}
	return ""
}

func (m *Routing) GetCabin() CabinClass {
	if m != nil {
		return m.Cabin
	}
	return CabinClass_A
}

func (m *Routing) GetAccountCode() string {
	if m != nil {
		return m.AccountCode
	}
	return ""
}

func (m *Routing) GetFareCalcLine() string {
	if m != nil {
		return m.FareCalcLine
	}
	return ""
}

func (m *Routing) GetTof() string {
	if m != nil {
		return m.Tof
	}
	return ""
}

func (m *Routing) GetArf() string {
	if m != nil {
		return m.Arf
	}
	return ""
}

func (m *Routing) GetCtof() string {
	if m != nil {
		return m.Ctof
	}
	return ""
}

func (m *Routing) GetViewPrice() float64 {
	if m != nil {
		return m.ViewPrice
	}
	return 0
}

func (m *Routing) GetTicketPrice() float64 {
	if m != nil {
		return m.TicketPrice
	}
	return 0
}

func (m *Routing) GetChildTicketPrice() float64 {
	if m != nil {
		return m.ChildTicketPrice
	}
	return 0
}

func (m *Routing) GetAduTag() string {
	if m != nil {
		return m.AduTag
	}
	return ""
}

func (m *Routing) GetChiTag() string {
	if m != nil {
		return m.ChiTag
	}
	return ""
}

func (m *Routing) GetProviderType() ProviderType {
	if m != nil {
		return m.ProviderType
	}
	return ProviderType_PROVIDER_API
}

func (m *Routing) GetFlightCode() string {
	if m != nil {
		return m.FlightCode
	}
	return ""
}

func (m *Routing) GetOriAdultPrice() float64 {
	if m != nil {
		return m.OriAdultPrice
	}
	return 0
}

func (m *Routing) GetOriAdultTax() float64 {
	if m != nil {
		return m.OriAdultTax
	}
	return 0
}

func (m *Routing) GetOriChildPrice() float64 {
	if m != nil {
		return m.OriChildPrice
	}
	return 0
}

func (m *Routing) GetOriChildTax() float64 {
	if m != nil {
		return m.OriChildTax
	}
	return 0
}

func (m *Routing) GetOriInfantPrice() float64 {
	if m != nil {
		return m.OriInfantPrice
	}
	return 0
}

func (m *Routing) GetOriInfantTax() float64 {
	if m != nil {
		return m.OriInfantTax
	}
	return 0
}

func (m *Routing) GetPosLocation() string {
	if m != nil {
		return m.PosLocation
	}
	return ""
}

func (m *Routing) GetItinerarySplicing() bool {
	if m != nil {
		return m.ItinerarySplicing
	}
	return false
}

func (m *Routing) GetCurrencyConversions() []*CurrencyConversion {
	if m != nil {
		return m.CurrencyConversions
	}
	return nil
}

func (m *Routing) GetMasterCurrency() string {
	if m != nil {
		return m.MasterCurrency
	}
	return ""
}

func (m *Routing) GetProviderCurrency() string {
	if m != nil {
		return m.ProviderCurrency
	}
	return ""
}

func (m *Routing) GetProviderName() string {
	if m != nil {
		return m.ProviderName
	}
	return ""
}

func (m *Routing) GetTraceSpans() []*TraceSpan {
	if m != nil {
		return m.TraceSpans
	}
	return nil
}

func (m *Routing) GetEvictionMarks() []*EvictionMark {
	if m != nil {
		return m.EvictionMarks
	}
	return nil
}

func (m *Routing) GetBookingToken() string {
	if m != nil {
		return m.BookingToken
	}
	return ""
}

func (m *Routing) GetAdultPublishPrice() float64 {
	if m != nil {
		return m.AdultPublishPrice
	}
	return 0
}

func (m *Routing) GetAdultPublishTax() float64 {
	if m != nil {
		return m.AdultPublishTax
	}
	return 0
}

func (m *Routing) GetChildPublishPrice() float64 {
	if m != nil {
		return m.ChildPublishPrice
	}
	return 0
}

func (m *Routing) GetChildPublishTax() float64 {
	if m != nil {
		return m.ChildPublishTax
	}
	return 0
}

func (m *Routing) GetInfantPublishPrice() float64 {
	if m != nil {
		return m.InfantPublishPrice
	}
	return 0
}

func (m *Routing) GetInfantPublishTax() float64 {
	if m != nil {
		return m.InfantPublishTax
	}
	return 0
}

func (m *Routing) GetValidSegmentsCount() int32 {
	if m != nil {
		return m.ValidSegmentsCount
	}
	return 0
}

func (m *Routing) GetTicketSource() int32 {
	if m != nil {
		return m.TicketSource
	}
	return 0
}

func (m *Routing) GetSaleBaggage() bool {
	if m != nil {
		return m.SaleBaggage
	}
	return false
}

func (m *Routing) GetOnlineCheckIn() bool {
	if m != nil {
		return m.OnlineCheckIn
	}
	return false
}

func (m *Routing) GetAiPolicyChangeInfo() *AIPolicyChangeInfo {
	if m != nil {
		return m.AiPolicyChangeInfo
	}
	return nil
}

func (m *Routing) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

func (m *Routing) GetRoutingType() string {
	if m != nil {
		return m.RoutingType
	}
	return ""
}

func (m *Routing) GetNextDayPurchase() bool {
	if m != nil {
		return m.NextDayPurchase
	}
	return false
}

func (m *Routing) GetPurchaseDate() string {
	if m != nil {
		return m.PurchaseDate
	}
	return ""
}

func (m *Routing) GetEarliestTktTime() string {
	if m != nil {
		return m.EarliestTktTime
	}
	return ""
}

func (m *Routing) GetProviderPcc() string {
	if m != nil {
		return m.ProviderPcc
	}
	return ""
}

func (m *Routing) GetSearchResponseTime() string {
	if m != nil {
		return m.SearchResponseTime
	}
	return ""
}

func (m *Routing) GetActualProvider() string {
	if m != nil {
		return m.ActualProvider
	}
	return ""
}

func (m *Routing) GetProviderLocation() string {
	if m != nil {
		return m.ProviderLocation
	}
	return ""
}

type Itinerary struct {
	OriginCity           string     `protobuf:"bytes,1,opt,name=origin_city,json=originCity,proto3" json:"origin_city,omitempty"`
	DestinationCity      string     `protobuf:"bytes,2,opt,name=destination_city,json=destinationCity,proto3" json:"destination_city,omitempty"`
	Segment              []*Segment `protobuf:"bytes,3,rep,name=segment,proto3" json:"segment,omitempty"`
	Duration             int32      `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	SegmentSplicing      bool       `protobuf:"varint,5,opt,name=segment_splicing,json=segmentSplicing,proto3" json:"segment_splicing,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Itinerary) Reset()         { *m = Itinerary{} }
func (m *Itinerary) String() string { return proto.CompactTextString(m) }
func (*Itinerary) ProtoMessage()    {}
func (*Itinerary) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{6}
}

func (m *Itinerary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Itinerary.Unmarshal(m, b)
}
func (m *Itinerary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Itinerary.Marshal(b, m, deterministic)
}
func (m *Itinerary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Itinerary.Merge(m, src)
}
func (m *Itinerary) XXX_Size() int {
	return xxx_messageInfo_Itinerary.Size(m)
}
func (m *Itinerary) XXX_DiscardUnknown() {
	xxx_messageInfo_Itinerary.DiscardUnknown(m)
}

var xxx_messageInfo_Itinerary proto.InternalMessageInfo

func (m *Itinerary) GetOriginCity() string {
	if m != nil {
		return m.OriginCity
	}
	return ""
}

func (m *Itinerary) GetDestinationCity() string {
	if m != nil {
		return m.DestinationCity
	}
	return ""
}

func (m *Itinerary) GetSegment() []*Segment {
	if m != nil {
		return m.Segment
	}
	return nil
}

func (m *Itinerary) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Itinerary) GetSegmentSplicing() bool {
	if m != nil {
		return m.SegmentSplicing
	}
	return false
}

type Segment struct {
	Carrier               string      `protobuf:"bytes,1,opt,name=carrier,proto3" json:"carrier,omitempty"`
	FlightNumber          string      `protobuf:"bytes,2,opt,name=flight_number,json=flightNumber,proto3" json:"flight_number,omitempty"`
	OperatingCarrier      string      `protobuf:"bytes,3,opt,name=operating_carrier,json=operatingCarrier,proto3" json:"operating_carrier,omitempty"`
	OperatingFlightNumber string      `protobuf:"bytes,4,opt,name=operating_flight_number,json=operatingFlightNumber,proto3" json:"operating_flight_number,omitempty"`
	CodeShare             bool        `protobuf:"varint,5,opt,name=code_share,json=codeShare,proto3" json:"code_share,omitempty"`
	DepartureAirport      string      `protobuf:"bytes,6,opt,name=departure_airport,json=departureAirport,proto3" json:"departure_airport,omitempty"`
	DepartureTime         string      `protobuf:"bytes,7,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	ArrivalAirport        string      `protobuf:"bytes,8,opt,name=arrival_airport,json=arrivalAirport,proto3" json:"arrival_airport,omitempty"`
	ArrivalTime           string      `protobuf:"bytes,9,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	Duration              int32       `protobuf:"varint,10,opt,name=duration,proto3" json:"duration,omitempty"`
	Cabin                 CabinClass  `protobuf:"varint,11,opt,name=cabin,proto3,enum=protos.CabinClass" json:"cabin,omitempty"`
	BookingClass          string      `protobuf:"bytes,12,opt,name=booking_class,json=bookingClass,proto3" json:"booking_class,omitempty"`
	AircraftCode          string      `protobuf:"bytes,13,opt,name=aircraft_code,json=aircraftCode,proto3" json:"aircraft_code,omitempty"`
	FareBasis             string      `protobuf:"bytes,14,opt,name=fare_basis,json=fareBasis,proto3" json:"fare_basis,omitempty"`
	ChildFareBasis        string      `protobuf:"bytes,15,opt,name=child_fare_basis,json=childFareBasis,proto3" json:"child_fare_basis,omitempty"`
	FareType              FareType    `protobuf:"varint,16,opt,name=fare_type,json=fareType,proto3,enum=protos.FareType" json:"fare_type,omitempty"`
	StopCity              []*StopCity `protobuf:"bytes,17,rep,name=stop_city,json=stopCity,proto3" json:"stop_city,omitempty"`
	Seats                 int32       `protobuf:"varint,18,opt,name=seats,proto3" json:"seats,omitempty"`
	DepartureTerminal     string      `protobuf:"bytes,19,opt,name=departure_terminal,json=departureTerminal,proto3" json:"departure_terminal,omitempty"`
	ArrivalTerminal       string      `protobuf:"bytes,20,opt,name=arrival_terminal,json=arrivalTerminal,proto3" json:"arrival_terminal,omitempty"`
	Baggage               *Baggage    `protobuf:"bytes,21,opt,name=baggage,proto3" json:"baggage,omitempty"`
	Status                string      `protobuf:"bytes,22,opt,name=status,proto3" json:"status,omitempty"`
	MarriageGrp           string      `protobuf:"bytes,23,opt,name=marriage_grp,json=marriageGrp,proto3" json:"marriage_grp,omitempty"`
	AccountCode           string      `protobuf:"bytes,24,opt,name=account_code,json=accountCode,proto3" json:"account_code,omitempty"`
	//qunar snail param
	StopInfo   int32  `protobuf:"varint,25,opt,name=stop_info,json=stopInfo,proto3" json:"stop_info,omitempty"`
	ChildCabin string `protobuf:"bytes,49,opt,name=child_cabin,json=childCabin,proto3" json:"child_cabin,omitempty"`
	//travelport param
	AvailabilitySource      string `protobuf:"bytes,26,opt,name=availability_source,json=availabilitySource,proto3" json:"availability_source,omitempty"`
	Connection              bool   `protobuf:"varint,27,opt,name=connection,proto3" json:"connection,omitempty"`
	Key                     string `protobuf:"bytes,28,opt,name=key,proto3" json:"key,omitempty"`
	FlyTime                 int32  `protobuf:"varint,29,opt,name=fly_time,json=flyTime,proto3" json:"fly_time,omitempty"`
	DepartureTimeWithOffset string `protobuf:"bytes,30,opt,name=departure_time_with_offset,json=departureTimeWithOffset,proto3" json:"departure_time_with_offset,omitempty"`
	ArrivalTimeWithOffset   string `protobuf:"bytes,31,opt,name=arrival_time_with_offset,json=arrivalTimeWithOffset,proto3" json:"arrival_time_with_offset,omitempty"`
	MainSegment             bool   `protobuf:"varint,32,opt,name=main_segment,json=mainSegment,proto3" json:"main_segment,omitempty"`
	// skypicker param
	Id                   string   `protobuf:"bytes,33,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Segment) Reset()         { *m = Segment{} }
func (m *Segment) String() string { return proto.CompactTextString(m) }
func (*Segment) ProtoMessage()    {}
func (*Segment) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{7}
}

func (m *Segment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Segment.Unmarshal(m, b)
}
func (m *Segment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Segment.Marshal(b, m, deterministic)
}
func (m *Segment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Segment.Merge(m, src)
}
func (m *Segment) XXX_Size() int {
	return xxx_messageInfo_Segment.Size(m)
}
func (m *Segment) XXX_DiscardUnknown() {
	xxx_messageInfo_Segment.DiscardUnknown(m)
}

var xxx_messageInfo_Segment proto.InternalMessageInfo

func (m *Segment) GetCarrier() string {
	if m != nil {
		return m.Carrier
	}
	return ""
}

func (m *Segment) GetFlightNumber() string {
	if m != nil {
		return m.FlightNumber
	}
	return ""
}

func (m *Segment) GetOperatingCarrier() string {
	if m != nil {
		return m.OperatingCarrier
	}
	return ""
}

func (m *Segment) GetOperatingFlightNumber() string {
	if m != nil {
		return m.OperatingFlightNumber
	}
	return ""
}

func (m *Segment) GetCodeShare() bool {
	if m != nil {
		return m.CodeShare
	}
	return false
}

func (m *Segment) GetDepartureAirport() string {
	if m != nil {
		return m.DepartureAirport
	}
	return ""
}

func (m *Segment) GetDepartureTime() string {
	if m != nil {
		return m.DepartureTime
	}
	return ""
}

func (m *Segment) GetArrivalAirport() string {
	if m != nil {
		return m.ArrivalAirport
	}
	return ""
}

func (m *Segment) GetArrivalTime() string {
	if m != nil {
		return m.ArrivalTime
	}
	return ""
}

func (m *Segment) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Segment) GetCabin() CabinClass {
	if m != nil {
		return m.Cabin
	}
	return CabinClass_A
}

func (m *Segment) GetBookingClass() string {
	if m != nil {
		return m.BookingClass
	}
	return ""
}

func (m *Segment) GetAircraftCode() string {
	if m != nil {
		return m.AircraftCode
	}
	return ""
}

func (m *Segment) GetFareBasis() string {
	if m != nil {
		return m.FareBasis
	}
	return ""
}

func (m *Segment) GetChildFareBasis() string {
	if m != nil {
		return m.ChildFareBasis
	}
	return ""
}

func (m *Segment) GetFareType() FareType {
	if m != nil {
		return m.FareType
	}
	return FareType_PRIVATE
}

func (m *Segment) GetStopCity() []*StopCity {
	if m != nil {
		return m.StopCity
	}
	return nil
}

func (m *Segment) GetSeats() int32 {
	if m != nil {
		return m.Seats
	}
	return 0
}

func (m *Segment) GetDepartureTerminal() string {
	if m != nil {
		return m.DepartureTerminal
	}
	return ""
}

func (m *Segment) GetArrivalTerminal() string {
	if m != nil {
		return m.ArrivalTerminal
	}
	return ""
}

func (m *Segment) GetBaggage() *Baggage {
	if m != nil {
		return m.Baggage
	}
	return nil
}

func (m *Segment) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Segment) GetMarriageGrp() string {
	if m != nil {
		return m.MarriageGrp
	}
	return ""
}

func (m *Segment) GetAccountCode() string {
	if m != nil {
		return m.AccountCode
	}
	return ""
}

func (m *Segment) GetStopInfo() int32 {
	if m != nil {
		return m.StopInfo
	}
	return 0
}

func (m *Segment) GetChildCabin() string {
	if m != nil {
		return m.ChildCabin
	}
	return ""
}

func (m *Segment) GetAvailabilitySource() string {
	if m != nil {
		return m.AvailabilitySource
	}
	return ""
}

func (m *Segment) GetConnection() bool {
	if m != nil {
		return m.Connection
	}
	return false
}

func (m *Segment) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Segment) GetFlyTime() int32 {
	if m != nil {
		return m.FlyTime
	}
	return 0
}

func (m *Segment) GetDepartureTimeWithOffset() string {
	if m != nil {
		return m.DepartureTimeWithOffset
	}
	return ""
}

func (m *Segment) GetArrivalTimeWithOffset() string {
	if m != nil {
		return m.ArrivalTimeWithOffset
	}
	return ""
}

func (m *Segment) GetMainSegment() bool {
	if m != nil {
		return m.MainSegment
	}
	return false
}

func (m *Segment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type StopCity struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	ArrivalTime          string   `protobuf:"bytes,2,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	DepartureTime        string   `protobuf:"bytes,3,opt,name=departure_time,json=departureTime,proto3" json:"departure_time,omitempty"`
	Duration             int32    `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	AirportCode          string   `protobuf:"bytes,5,opt,name=airport_code,json=airportCode,proto3" json:"airport_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopCity) Reset()         { *m = StopCity{} }
func (m *StopCity) String() string { return proto.CompactTextString(m) }
func (*StopCity) ProtoMessage()    {}
func (*StopCity) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{8}
}

func (m *StopCity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopCity.Unmarshal(m, b)
}
func (m *StopCity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopCity.Marshal(b, m, deterministic)
}
func (m *StopCity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopCity.Merge(m, src)
}
func (m *StopCity) XXX_Size() int {
	return xxx_messageInfo_StopCity.Size(m)
}
func (m *StopCity) XXX_DiscardUnknown() {
	xxx_messageInfo_StopCity.DiscardUnknown(m)
}

var xxx_messageInfo_StopCity proto.InternalMessageInfo

func (m *StopCity) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *StopCity) GetArrivalTime() string {
	if m != nil {
		return m.ArrivalTime
	}
	return ""
}

func (m *StopCity) GetDepartureTime() string {
	if m != nil {
		return m.DepartureTime
	}
	return ""
}

func (m *StopCity) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *StopCity) GetAirportCode() string {
	if m != nil {
		return m.AirportCode
	}
	return ""
}

type Baggage struct {
	FreeBaggagePiece     int32    `protobuf:"varint,1,opt,name=free_baggage_piece,json=freeBaggagePiece,proto3" json:"free_baggage_piece,omitempty"`
	FreeBaggageWeight    float64  `protobuf:"fixed64,2,opt,name=free_baggage_weight,json=freeBaggageWeight,proto3" json:"free_baggage_weight,omitempty"`
	BaggageCheck         bool     `protobuf:"varint,4,opt,name=baggage_check,json=baggageCheck,proto3" json:"baggage_check,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Baggage) Reset()         { *m = Baggage{} }
func (m *Baggage) String() string { return proto.CompactTextString(m) }
func (*Baggage) ProtoMessage()    {}
func (*Baggage) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{9}
}

func (m *Baggage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Baggage.Unmarshal(m, b)
}
func (m *Baggage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Baggage.Marshal(b, m, deterministic)
}
func (m *Baggage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Baggage.Merge(m, src)
}
func (m *Baggage) XXX_Size() int {
	return xxx_messageInfo_Baggage.Size(m)
}
func (m *Baggage) XXX_DiscardUnknown() {
	xxx_messageInfo_Baggage.DiscardUnknown(m)
}

var xxx_messageInfo_Baggage proto.InternalMessageInfo

func (m *Baggage) GetFreeBaggagePiece() int32 {
	if m != nil {
		return m.FreeBaggagePiece
	}
	return 0
}

func (m *Baggage) GetFreeBaggageWeight() float64 {
	if m != nil {
		return m.FreeBaggageWeight
	}
	return 0
}

func (m *Baggage) GetBaggageCheck() bool {
	if m != nil {
		return m.BaggageCheck
	}
	return false
}

type Rule struct {
	Refund               string   `protobuf:"bytes,1,opt,name=refund,proto3" json:"refund,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rule) Reset()         { *m = Rule{} }
func (m *Rule) String() string { return proto.CompactTextString(m) }
func (*Rule) ProtoMessage()    {}
func (*Rule) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{10}
}

func (m *Rule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rule.Unmarshal(m, b)
}
func (m *Rule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rule.Marshal(b, m, deterministic)
}
func (m *Rule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rule.Merge(m, src)
}
func (m *Rule) XXX_Size() int {
	return xxx_messageInfo_Rule.Size(m)
}
func (m *Rule) XXX_DiscardUnknown() {
	xxx_messageInfo_Rule.DiscardUnknown(m)
}

var xxx_messageInfo_Rule proto.InternalMessageInfo

func (m *Rule) GetRefund() string {
	if m != nil {
		return m.Refund
	}
	return ""
}

type CurrencyConversion struct {
	From   string  `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To     string  `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Rate   float64 `protobuf:"fixed64,3,opt,name=rate,proto3" json:"rate,omitempty"`
	Source string  `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	// google.protobuf.Timestamp timestamp = 5;
	PolicyId             string   `protobuf:"bytes,6,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrencyConversion) Reset()         { *m = CurrencyConversion{} }
func (m *CurrencyConversion) String() string { return proto.CompactTextString(m) }
func (*CurrencyConversion) ProtoMessage()    {}
func (*CurrencyConversion) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{11}
}

func (m *CurrencyConversion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrencyConversion.Unmarshal(m, b)
}
func (m *CurrencyConversion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrencyConversion.Marshal(b, m, deterministic)
}
func (m *CurrencyConversion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrencyConversion.Merge(m, src)
}
func (m *CurrencyConversion) XXX_Size() int {
	return xxx_messageInfo_CurrencyConversion.Size(m)
}
func (m *CurrencyConversion) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrencyConversion.DiscardUnknown(m)
}

var xxx_messageInfo_CurrencyConversion proto.InternalMessageInfo

func (m *CurrencyConversion) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *CurrencyConversion) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *CurrencyConversion) GetRate() float64 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *CurrencyConversion) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *CurrencyConversion) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

type PriceChangesByPolicy struct {
	Policyid             string   `protobuf:"bytes,1,opt,name=policyid,proto3" json:"policyid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PriceChangesByPolicy) Reset()         { *m = PriceChangesByPolicy{} }
func (m *PriceChangesByPolicy) String() string { return proto.CompactTextString(m) }
func (*PriceChangesByPolicy) ProtoMessage()    {}
func (*PriceChangesByPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{12}
}

func (m *PriceChangesByPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceChangesByPolicy.Unmarshal(m, b)
}
func (m *PriceChangesByPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceChangesByPolicy.Marshal(b, m, deterministic)
}
func (m *PriceChangesByPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceChangesByPolicy.Merge(m, src)
}
func (m *PriceChangesByPolicy) XXX_Size() int {
	return xxx_messageInfo_PriceChangesByPolicy.Size(m)
}
func (m *PriceChangesByPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceChangesByPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_PriceChangesByPolicy proto.InternalMessageInfo

func (m *PriceChangesByPolicy) GetPolicyid() string {
	if m != nil {
		return m.Policyid
	}
	return ""
}

type EvictionMark struct {
	EvictionReason       string       `protobuf:"bytes,1,opt,name=eviction_reason,json=evictionReason,proto3" json:"eviction_reason,omitempty"`
	TraceSpans           []*TraceSpan `protobuf:"bytes,2,rep,name=trace_spans,json=traceSpans,proto3" json:"trace_spans,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EvictionMark) Reset()         { *m = EvictionMark{} }
func (m *EvictionMark) String() string { return proto.CompactTextString(m) }
func (*EvictionMark) ProtoMessage()    {}
func (*EvictionMark) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{13}
}

func (m *EvictionMark) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EvictionMark.Unmarshal(m, b)
}
func (m *EvictionMark) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EvictionMark.Marshal(b, m, deterministic)
}
func (m *EvictionMark) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EvictionMark.Merge(m, src)
}
func (m *EvictionMark) XXX_Size() int {
	return xxx_messageInfo_EvictionMark.Size(m)
}
func (m *EvictionMark) XXX_DiscardUnknown() {
	xxx_messageInfo_EvictionMark.DiscardUnknown(m)
}

var xxx_messageInfo_EvictionMark proto.InternalMessageInfo

func (m *EvictionMark) GetEvictionReason() string {
	if m != nil {
		return m.EvictionReason
	}
	return ""
}

func (m *EvictionMark) GetTraceSpans() []*TraceSpan {
	if m != nil {
		return m.TraceSpans
	}
	return nil
}

type TraceSpan struct {
	//
	// 该消息体用来保存各种需要trace的处理记录，例如在搜索时需要记录匹配上的黑白名单、以及应用过的各种政策
	SpanId               string              `protobuf:"bytes,1,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`
	TraceType            TraceSpan_TraceType `protobuf:"varint,2,opt,name=trace_type,json=traceType,proto3,enum=protos.TraceSpan_TraceType" json:"trace_type,omitempty"`
	Application          string              `protobuf:"bytes,3,opt,name=application,proto3" json:"application,omitempty"`
	Desc                 string              `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Tags                 map[string]string   `protobuf:"bytes,16,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TraceSpan) Reset()         { *m = TraceSpan{} }
func (m *TraceSpan) String() string { return proto.CompactTextString(m) }
func (*TraceSpan) ProtoMessage()    {}
func (*TraceSpan) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{14}
}

func (m *TraceSpan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TraceSpan.Unmarshal(m, b)
}
func (m *TraceSpan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TraceSpan.Marshal(b, m, deterministic)
}
func (m *TraceSpan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TraceSpan.Merge(m, src)
}
func (m *TraceSpan) XXX_Size() int {
	return xxx_messageInfo_TraceSpan.Size(m)
}
func (m *TraceSpan) XXX_DiscardUnknown() {
	xxx_messageInfo_TraceSpan.DiscardUnknown(m)
}

var xxx_messageInfo_TraceSpan proto.InternalMessageInfo

func (m *TraceSpan) GetSpanId() string {
	if m != nil {
		return m.SpanId
	}
	return ""
}

func (m *TraceSpan) GetTraceType() TraceSpan_TraceType {
	if m != nil {
		return m.TraceType
	}
	return TraceSpan_None
}

func (m *TraceSpan) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *TraceSpan) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *TraceSpan) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type AIPolicyChangeInfo struct {
	AdultAdjustAmount    float64  `protobuf:"fixed64,1,opt,name=adult_adjust_amount,json=adultAdjustAmount,proto3" json:"adult_adjust_amount,omitempty"`
	AdultAdjustCurrency  string   `protobuf:"bytes,2,opt,name=adult_adjust_currency,json=adultAdjustCurrency,proto3" json:"adult_adjust_currency,omitempty"`
	PolicyNumber         string   `protobuf:"bytes,3,opt,name=policy_number,json=policyNumber,proto3" json:"policy_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AIPolicyChangeInfo) Reset()         { *m = AIPolicyChangeInfo{} }
func (m *AIPolicyChangeInfo) String() string { return proto.CompactTextString(m) }
func (*AIPolicyChangeInfo) ProtoMessage()    {}
func (*AIPolicyChangeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{15}
}

func (m *AIPolicyChangeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AIPolicyChangeInfo.Unmarshal(m, b)
}
func (m *AIPolicyChangeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AIPolicyChangeInfo.Marshal(b, m, deterministic)
}
func (m *AIPolicyChangeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AIPolicyChangeInfo.Merge(m, src)
}
func (m *AIPolicyChangeInfo) XXX_Size() int {
	return xxx_messageInfo_AIPolicyChangeInfo.Size(m)
}
func (m *AIPolicyChangeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AIPolicyChangeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AIPolicyChangeInfo proto.InternalMessageInfo

func (m *AIPolicyChangeInfo) GetAdultAdjustAmount() float64 {
	if m != nil {
		return m.AdultAdjustAmount
	}
	return 0
}

func (m *AIPolicyChangeInfo) GetAdultAdjustCurrency() string {
	if m != nil {
		return m.AdultAdjustCurrency
	}
	return ""
}

func (m *AIPolicyChangeInfo) GetPolicyNumber() string {
	if m != nil {
		return m.PolicyNumber
	}
	return ""
}

func init() {
	proto.RegisterEnum("protos.CabinClass", CabinClass_name, CabinClass_value)
	proto.RegisterEnum("protos.FareType", FareType_name, FareType_value)
	proto.RegisterEnum("protos.ProviderType", ProviderType_name, ProviderType_value)
	proto.RegisterEnum("protos.TraceSpan_TraceType", TraceSpan_TraceType_name, TraceSpan_TraceType_value)
	proto.RegisterType((*SimpleRequest)(nil), "protos.SimpleRequest")
	proto.RegisterType((*SimpleResponse)(nil), "protos.SimpleResponse")
	proto.RegisterType((*Trip)(nil), "protos.Trip")
	proto.RegisterType((*YuetuSearchRequest)(nil), "protos.YuetuSearchRequest")
	proto.RegisterType((*YuetuSearchResponse)(nil), "protos.YuetuSearchResponse")
	proto.RegisterType((*Routing)(nil), "protos.Routing")
	proto.RegisterType((*Itinerary)(nil), "protos.Itinerary")
	proto.RegisterType((*Segment)(nil), "protos.Segment")
	proto.RegisterType((*StopCity)(nil), "protos.StopCity")
	proto.RegisterType((*Baggage)(nil), "protos.Baggage")
	proto.RegisterType((*Rule)(nil), "protos.Rule")
	proto.RegisterType((*CurrencyConversion)(nil), "protos.CurrencyConversion")
	proto.RegisterType((*PriceChangesByPolicy)(nil), "protos.PriceChangesByPolicy")
	proto.RegisterType((*EvictionMark)(nil), "protos.EvictionMark")
	proto.RegisterType((*TraceSpan)(nil), "protos.TraceSpan")
	proto.RegisterMapType((map[string]string)(nil), "protos.TraceSpan.TagsEntry")
	proto.RegisterType((*AIPolicyChangeInfo)(nil), "protos.AIPolicyChangeInfo")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 2898 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x59, 0xdb, 0x76, 0xdb, 0xc6,
	0xd5, 0x36, 0xa9, 0x03, 0xc9, 0x21, 0x25, 0x41, 0x23, 0xc9, 0x86, 0xe5, 0x3f, 0x89, 0xcc, 0x38,
	0x8e, 0xec, 0xf8, 0x10, 0x2b, 0x7f, 0x4e, 0x76, 0xda, 0x55, 0x8a, 0x96, 0x63, 0xb6, 0x3e, 0xb0,
	0x20, 0x6d, 0xaf, 0x5c, 0x61, 0x8d, 0x80, 0x21, 0x35, 0x15, 0x08, 0xc0, 0x03, 0x50, 0x0e, 0x2f,
	0x73, 0xdf, 0x57, 0xe8, 0x5d, 0xd7, 0xea, 0x75, 0xaf, 0xfa, 0x08, 0x5d, 0x7d, 0x95, 0x3e, 0x45,
	0xd7, 0xde, 0x7b, 0x06, 0x04, 0x25, 0xb7, 0xf1, 0x95, 0x66, 0xbe, 0xfd, 0xcd, 0xc6, 0x70, 0x66,
	0x1f, 0x47, 0xac, 0x95, 0x49, 0x7d, 0x26, 0xf5, 0xbd, 0x54, 0x27, 0x79, 0xc2, 0x57, 0xf1, 0x4f,
	0xd6, 0xfe, 0x81, 0xad, 0x0d, 0xd4, 0x24, 0x8d, 0xa4, 0x27, 0xdf, 0x4e, 0x65, 0x96, 0x73, 0x87,
	0x2d, 0x05, 0x2a, 0x74, 0x2b, 0x7b, 0x95, 0xfd, 0x86, 0x07, 0x43, 0x7e, 0x95, 0xd5, 0x73, 0x2d,
	0x02, 0xe9, 0xab, 0xd0, 0xad, 0x22, 0x5c, 0xc3, 0x79, 0x2f, 0x6c, 0x3f, 0x64, 0xeb, 0x76, 0x75,
	0x96, 0x26, 0x71, 0x26, 0xf9, 0x65, 0xb6, 0x9a, 0xe5, 0x22, 0x9f, 0x66, 0xa8, 0x61, 0xc5, 0x33,
	0x33, 0x50, 0x3b, 0xc9, 0xc6, 0x66, 0x3d, 0x0c, 0xdb, 0xef, 0xd8, 0xf2, 0x50, 0xab, 0x94, 0x7f,
	0xc6, 0xd6, 0x43, 0x99, 0x0a, 0x9d, 0x4f, 0xb5, 0xf4, 0x83, 0x24, 0x94, 0xe6, 0xdb, 0x6b, 0x05,
	0xda, 0x4d, 0x42, 0xc9, 0xaf, 0xb3, 0x96, 0xd0, 0x5a, 0x9d, 0x89, 0x88, 0x48, 0xa4, 0xa9, 0x69,
	0x30, 0xa4, 0x2c, 0x68, 0x0a, 0x45, 0x2e, 0xdd, 0xa5, 0x73, 0x9a, 0x1e, 0x8b, 0x5c, 0xb6, 0xff,
	0x5d, 0x65, 0xfc, 0xa7, 0xa9, 0xcc, 0xa7, 0x03, 0x29, 0x74, 0x70, 0x62, 0x7f, 0xf8, 0x77, 0xac,
	0x75, 0x2c, 0x32, 0xe9, 0x6b, 0x9a, 0xe3, 0x2e, 0x9a, 0x07, 0x3b, 0x74, 0x5e, 0xd9, 0xbd, 0x85,
	0x53, 0xf2, 0x9a, 0x40, 0xb5, 0x2b, 0xf7, 0xd8, 0x72, 0xae, 0x55, 0x8a, 0x5b, 0x6a, 0x1e, 0xb4,
	0xec, 0x0a, 0xf8, 0x75, 0x1e, 0x4a, 0xf8, 0x3e, 0x5b, 0x09, 0xc4, 0xb1, 0x8a, 0x71, 0x43, 0xeb,
	0x07, 0xdc, 0x52, 0xba, 0x00, 0x76, 0x23, 0x91, 0x65, 0x1e, 0x11, 0xf8, 0x35, 0xd6, 0x10, 0xe1,
	0x34, 0xca, 0xfd, 0x78, 0x3a, 0x71, 0x97, 0xf1, 0x08, 0xeb, 0x08, 0xbc, 0x98, 0x4e, 0x40, 0x18,
	0x9c, 0xa8, 0x28, 0x44, 0xe1, 0x0a, 0x09, 0x11, 0x00, 0xe1, 0x47, 0x8c, 0xa9, 0x78, 0x24, 0x62,
	0x5a, 0xba, 0x8a, 0xd2, 0x06, 0x21, 0x20, 0xbe, 0xce, 0x5a, 0xc7, 0xb3, 0x54, 0x64, 0x99, 0x1f,
	0x88, 0xe0, 0x44, 0xba, 0xb5, 0xbd, 0xca, 0x7e, 0xdd, 0x6b, 0x12, 0xd6, 0x05, 0x88, 0x7f, 0xce,
	0x36, 0xc6, 0x49, 0xe8, 0xa7, 0x52, 0x67, 0xa9, 0x0c, 0x72, 0x75, 0x26, 0xdd, 0x3a, 0xb2, 0xd6,
	0xc7, 0x49, 0xd8, 0x9f, 0xa3, 0xfc, 0x16, 0x73, 0x72, 0xa1, 0xc7, 0x32, 0xf7, 0x53, 0x9d, 0x9c,
	0xa9, 0x50, 0xea, 0xcc, 0x6d, 0xec, 0x2d, 0xed, 0x37, 0xbc, 0x0d, 0xc2, 0xfb, 0x16, 0x6e, 0xff,
	0xbd, 0xc2, 0xb6, 0x16, 0x0e, 0xdb, 0xd8, 0xc9, 0x23, 0xb6, 0x66, 0x4e, 0x9b, 0x00, 0x73, 0xdc,
	0x97, 0xcf, 0x1f, 0x37, 0x49, 0xbd, 0x16, 0x9d, 0xb7, 0x59, 0x7c, 0x8b, 0xd5, 0x74, 0x32, 0xcd,
	0x55, 0x0c, 0x06, 0xb5, 0xb4, 0xdf, 0x3c, 0xd8, 0xb0, 0xcb, 0x3c, 0x82, 0x3d, 0x2b, 0xe7, 0x07,
	0xac, 0x49, 0xc6, 0x9b, 0xa5, 0x22, 0xce, 0xdc, 0x25, 0xa4, 0x6f, 0xce, 0xaf, 0x48, 0x04, 0x72,
	0x90, 0x8a, 0xd8, 0x63, 0xb9, 0x1d, 0x66, 0xed, 0xbf, 0x5e, 0x65, 0x35, 0xa3, 0x88, 0x73, 0xb6,
	0x1c, 0x8a, 0x5c, 0x18, 0x9b, 0xc4, 0x31, 0xbf, 0xcf, 0x1a, 0x2a, 0x57, 0xb1, 0xd4, 0x42, 0xcf,
	0xcc, 0x06, 0x0a, 0x8d, 0x3d, 0x2b, 0xf0, 0xe6, 0x1c, 0xfe, 0x09, 0x6b, 0xd2, 0xa5, 0xa6, 0x5a,
	0x05, 0x64, 0x95, 0x15, 0x8f, 0x21, 0xd4, 0x07, 0x64, 0x7e, 0xeb, 0xb9, 0xf8, 0x19, 0x6f, 0xbd,
	0x62, 0x6e, 0x7d, 0x28, 0x7e, 0x86, 0xd5, 0x74, 0xeb, 0xb4, 0x7a, 0x85, 0x56, 0x23, 0x54, 0xac,
	0x26, 0x02, 0xac, 0x5e, 0xa5, 0xd5, 0x08, 0xc0, 0xea, 0xeb, 0xac, 0x65, 0xcc, 0x82, 0x96, 0xd7,
	0x50, 0xde, 0x24, 0x8c, 0xd6, 0xcf, 0x2d, 0x07, 0x14, 0xd4, 0x91, 0x60, 0x2c, 0x07, 0x34, 0xdc,
	0x60, 0xeb, 0xc5, 0xe6, 0xfc, 0x7c, 0x96, 0x4a, 0xb7, 0x81, 0xc6, 0xd5, 0xb2, 0x3b, 0x1c, 0xce,
	0x52, 0x09, 0xac, 0x62, 0x13, 0xc4, 0x62, 0xc4, 0xb2, 0x3b, 0x41, 0xd6, 0x4d, 0xb6, 0x31, 0xff,
	0x14, 0xd1, 0x9a, 0x48, 0x5b, 0x2b, 0xbe, 0x87, 0xbc, 0x8f, 0x18, 0xc3, 0xed, 0x12, 0xa5, 0x45,
	0xc6, 0x8c, 0x88, 0x15, 0x8b, 0x34, 0x8d, 0x66, 0x24, 0x5e, 0x23, 0x31, 0x22, 0x28, 0xde, 0x65,
	0xf5, 0x60, 0xaa, 0xb5, 0x8c, 0x83, 0x99, 0xbb, 0x8e, 0x17, 0x57, 0xcc, 0xf9, 0x5d, 0xd6, 0x18,
	0x09, 0x6d, 0x14, 0x6f, 0xa0, 0x3b, 0x3a, 0xf6, 0xf2, 0x9e, 0x08, 0x8d, 0xfa, 0xbd, 0xfa, 0xc8,
	0x8c, 0xf8, 0x5d, 0xc6, 0xcf, 0x44, 0xa4, 0x42, 0x01, 0xd6, 0xe0, 0x07, 0x10, 0x6e, 0xa4, 0x76,
	0x1d, 0x54, 0xba, 0x39, 0x97, 0x74, 0x49, 0xc0, 0xb7, 0xd9, 0x4a, 0x26, 0x45, 0x9e, 0xb9, 0x9b,
	0xb8, 0x27, 0x9a, 0xc0, 0x76, 0xf1, 0x9b, 0xc7, 0x22, 0x53, 0x99, 0xcb, 0x71, 0x31, 0xee, 0xe2,
	0x10, 0x00, 0xbe, 0xcf, 0x1c, 0x3a, 0xba, 0x12, 0x69, 0x0b, 0x49, 0x74, 0xa4, 0x4f, 0x0a, 0xe6,
	0x75, 0xd6, 0x9a, 0x4c, 0xa3, 0x5c, 0xf9, 0xb9, 0x0a, 0x4e, 0x65, 0xee, 0x6e, 0x93, 0x13, 0x23,
	0x36, 0x44, 0x88, 0xef, 0x31, 0xba, 0x17, 0x7f, 0xa6, 0xf1, 0x3a, 0x77, 0x4a, 0xc6, 0xf6, 0x93,
	0x86, 0xfb, 0x9c, 0x33, 0xde, 0x22, 0xe3, 0x72, 0x99, 0xf1, 0x76, 0x81, 0x31, 0x4d, 0x90, 0x71,
	0xa5, 0xc4, 0x78, 0x95, 0x18, 0x06, 0x6d, 0xd9, 0x7c, 0xc5, 0x2d, 0x19, 0x65, 0xf1, 0x15, 0xc3,
	0xa0, 0xaf, 0x5c, 0x2d, 0x33, 0xde, 0x2e, 0x30, 0xcc, 0x57, 0x76, 0x4b, 0x0c, 0xfb, 0x95, 0xa6,
	0x8c, 0xd4, 0x58, 0x1d, 0xab, 0x48, 0xe5, 0x33, 0xf7, 0x1a, 0x85, 0xfc, 0x12, 0xc4, 0xbf, 0x67,
	0x57, 0xe9, 0x28, 0xfc, 0x5c, 0x4d, 0xa4, 0x1f, 0xa9, 0x89, 0xca, 0xfd, 0x89, 0x8a, 0xa7, 0xb9,
	0xcc, 0xdc, 0xff, 0xc3, 0x3b, 0xb8, 0x4c, 0x84, 0xa1, 0x9a, 0xc8, 0x67, 0x20, 0x7e, 0x4e, 0x52,
	0xfe, 0x29, 0x5b, 0x8b, 0x45, 0xae, 0x92, 0x58, 0x44, 0x64, 0x0c, 0x1f, 0x91, 0xbd, 0x5a, 0x10,
	0xaf, 0x7f, 0x8f, 0x35, 0xed, 0x1c, 0x76, 0xf0, 0x31, 0xed, 0xa0, 0x04, 0x41, 0x76, 0xcc, 0xa6,
	0x2a, 0xf7, 0xc5, 0x58, 0xba, 0x9f, 0x50, 0x76, 0x84, 0x79, 0x67, 0x2c, 0xf9, 0x3d, 0xb6, 0x65,
	0x36, 0xa7, 0xe2, 0xb3, 0xa4, 0xb0, 0xe6, 0x3d, 0xfc, 0xce, 0x26, 0x89, 0x7a, 0x24, 0x29, 0xac,
	0x9a, 0x1c, 0x0d, 0x68, 0x6d, 0x32, 0x13, 0x72, 0x32, 0x23, 0x36, 0x1e, 0x06, 0xe2, 0x4f, 0x49,
	0x4c, 0xde, 0x05, 0xe2, 0x4f, 0x58, 0xd3, 0xba, 0x16, 0xc8, 0x6f, 0xa0, 0xdc, 0x38, 0xb6, 0x5d,
	0x6f, 0xa2, 0x22, 0x64, 0xf2, 0xcf, 0x68, 0xbd, 0x41, 0x7a, 0xe1, 0x3c, 0x47, 0xdd, 0xfc, 0xb5,
	0x1c, 0x05, 0xa9, 0x38, 0x08, 0x92, 0x69, 0x9c, 0x53, 0x2a, 0xfe, 0xdc, 0xa4, 0x62, 0xc2, 0x30,
	0x15, 0xdf, 0x60, 0xeb, 0x68, 0xcc, 0x81, 0x88, 0x02, 0x3f, 0x52, 0xb1, 0x74, 0xf7, 0x91, 0xd4,
	0x02, 0xb4, 0x2b, 0xa2, 0xe0, 0x99, 0x8a, 0x25, 0x14, 0x05, 0x79, 0x32, 0x72, 0x6f, 0x51, 0x51,
	0x90, 0x27, 0x23, 0x40, 0x84, 0x1e, 0xb9, 0xb7, 0x09, 0x11, 0x7a, 0x04, 0x01, 0x38, 0x00, 0xd2,
	0x17, 0x14, 0x80, 0x61, 0x0c, 0xbf, 0xe4, 0x4c, 0xc9, 0x77, 0x26, 0xa2, 0xdd, 0xa1, 0x80, 0x05,
	0x08, 0xc5, 0xb3, 0xeb, 0xac, 0x65, 0xce, 0x9d, 0x08, 0x77, 0x29, 0xe4, 0x11, 0x46, 0x94, 0x3b,
	0x8c, 0x9b, 0xb3, 0x2c, 0x13, 0xef, 0x21, 0x91, 0x9c, 0x71, 0x58, 0x62, 0x5f, 0x61, 0x35, 0x11,
	0x4e, 0xfd, 0x5c, 0x8c, 0xdd, 0xfb, 0xb8, 0x8d, 0x55, 0x11, 0x4e, 0x87, 0x62, 0x0c, 0x82, 0xe0,
	0x44, 0xa1, 0xe0, 0x4b, 0x12, 0x04, 0x27, 0x0a, 0x04, 0xdf, 0xb3, 0x35, 0x9b, 0x1a, 0xe9, 0x3a,
	0x1e, 0xe0, 0xa1, 0x6e, 0xdb, 0x43, 0xb5, 0x09, 0x12, 0xa3, 0x4d, 0x2b, 0x2d, 0xcd, 0xe0, 0x1e,
	0x47, 0x91, 0x1a, 0x9f, 0x98, 0xc3, 0x3d, 0xa0, 0x7b, 0x24, 0x08, 0xcf, 0xf6, 0x26, 0xdb, 0x48,
	0xb4, 0xf2, 0xcb, 0x19, 0xe5, 0x2b, 0xdc, 0xf8, 0x5a, 0xa2, 0x55, 0x67, 0x9e, 0x54, 0xda, 0x6c,
	0x6d, 0xce, 0x03, 0x07, 0xfb, 0x7f, 0x3a, 0x07, 0xcb, 0x02, 0x0f, 0x33, 0xba, 0xca, 0xf9, 0xe5,
	0xeb, 0x42, 0x57, 0x77, 0x9e, 0x62, 0x8c, 0xae, 0x79, 0x9a, 0xf9, 0xa6, 0xd0, 0xd5, 0xb5, 0x99,
	0x66, 0x9f, 0x39, 0xc0, 0x59, 0xc8, 0x36, 0xdf, 0x22, 0x6d, 0x3d, 0xd1, 0xaa, 0x57, 0x4a, 0x38,
	0x37, 0xd8, 0x7a, 0x89, 0x09, 0xea, 0xbe, 0x43, 0x5e, 0xab, 0xe0, 0x99, 0xcc, 0x95, 0x26, 0x99,
	0x1f, 0x25, 0x01, 0xba, 0x9b, 0xfb, 0x3d, 0x99, 0x59, 0x9a, 0x64, 0xcf, 0x0c, 0x04, 0xd1, 0xb9,
	0xc8, 0xb2, 0x7e, 0x96, 0x46, 0x2a, 0x80, 0x9a, 0xe0, 0x21, 0x46, 0xc5, 0xcd, 0x42, 0x32, 0x30,
	0x02, 0xfe, 0x9c, 0x6d, 0xdb, 0x3c, 0xe0, 0x07, 0x49, 0x7c, 0x26, 0x75, 0xa6, 0x92, 0x38, 0x73,
	0x1f, 0x61, 0x0e, 0xdf, 0x2d, 0x2c, 0xde, 0x70, 0xba, 0x05, 0xc5, 0xdb, 0x0a, 0x2e, 0x60, 0x19,
	0xd4, 0x4b, 0x13, 0x91, 0xe5, 0x52, 0xfb, 0x45, 0xb6, 0xf9, 0x81, 0xc2, 0x36, 0xc1, 0x56, 0x0f,
	0xff, 0x82, 0x6d, 0x16, 0xd6, 0x50, 0x50, 0x7f, 0x83, 0x54, 0xc7, 0x0a, 0x0a, 0xf2, 0xa7, 0x25,
	0xd3, 0x89, 0xc5, 0x44, 0xba, 0xbf, 0x25, 0xcf, 0xb1, 0xe0, 0x0b, 0x31, 0x91, 0xe7, 0xcb, 0x9a,
	0xdf, 0x7d, 0x40, 0x59, 0xc3, 0x1f, 0xb1, 0x75, 0x79, 0xa6, 0x02, 0x38, 0x38, 0x7f, 0x22, 0xf4,
	0x69, 0xe6, 0x76, 0x70, 0x59, 0x61, 0x94, 0x47, 0x46, 0xfa, 0x5c, 0xe8, 0x53, 0x6f, 0x4d, 0x96,
	0x66, 0x18, 0x2d, 0x8f, 0x93, 0xe4, 0x14, 0x82, 0x47, 0x9e, 0x9c, 0xca, 0xd8, 0x3d, 0xa4, 0x5d,
	0x19, 0x70, 0x08, 0x18, 0x04, 0x3c, 0x63, 0x95, 0xd3, 0xe3, 0x48, 0x65, 0x27, 0xc6, 0x08, 0xba,
	0x78, 0xb9, 0x9b, 0x54, 0xef, 0x90, 0x84, 0xec, 0xe0, 0x36, 0xdb, 0x5c, 0xe4, 0x83, 0x29, 0x3c,
	0x46, 0xf6, 0x46, 0x99, 0x0d, 0xd6, 0x70, 0x8f, 0x6d, 0x19, 0x2b, 0x5d, 0xd0, 0x7d, 0x44, 0xba,
	0xa9, 0x1a, 0x3a, 0xa7, 0x7b, 0x91, 0x0f, 0xba, 0x9f, 0x90, 0xee, 0x32, 0x1b, 0x74, 0x7f, 0xc9,
	0xb6, 0xad, 0xd5, 0x2e, 0x28, 0xff, 0x11, 0xe9, 0xdc, 0xd4, 0x4a, 0x65, 0xed, 0x77, 0x18, 0x3f,
	0xb7, 0x02, 0xd4, 0x3f, 0xa5, 0xf8, 0xb1, 0xc0, 0x37, 0xfa, 0xb1, 0x54, 0xf0, 0x33, 0x39, 0x9e,
	0xc8, 0x38, 0xcf, 0x7c, 0x8c, 0x94, 0x6e, 0x0f, 0x33, 0x01, 0x15, 0x18, 0x03, 0x23, 0xea, 0x82,
	0x04, 0x8e, 0xdb, 0x44, 0xa6, 0x2c, 0x99, 0xea, 0x40, 0xba, 0xbf, 0xa7, 0xe4, 0x44, 0xe0, 0x00,
	0x31, 0x70, 0x90, 0x4c, 0x44, 0x50, 0x31, 0x8c, 0xc7, 0x90, 0x7e, 0xfe, 0x40, 0xd5, 0x00, 0x60,
	0x87, 0x04, 0xa1, 0x7f, 0xc7, 0x10, 0x7f, 0xfd, 0xe0, 0x44, 0x06, 0xa7, 0xbe, 0x8a, 0xdd, 0x67,
	0xc8, 0x5a, 0x23, 0xb8, 0x0b, 0x68, 0x2f, 0xe6, 0xcf, 0xd9, 0x8e, 0x50, 0x7e, 0x9a, 0x44, 0x0a,
	0x5c, 0xe3, 0x44, 0xc4, 0x63, 0x09, 0xee, 0x99, 0xb8, 0xcf, 0xb1, 0x2c, 0x2f, 0x5c, 0xa3, 0xd3,
	0xeb, 0x23, 0xa7, 0x8b, 0x94, 0x5e, 0x3c, 0x4a, 0x3c, 0x2e, 0xd4, 0x79, 0x8c, 0xbb, 0xac, 0x96,
	0x8a, 0x59, 0x94, 0x88, 0xd0, 0x7d, 0x41, 0x39, 0xd1, 0x4c, 0x61, 0xcf, 0x36, 0x09, 0x61, 0x5c,
	0x7c, 0x49, 0x4e, 0x6d, 0x30, 0x0c, 0x80, 0xb7, 0xd9, 0x66, 0x2c, 0x7f, 0xce, 0xfd, 0x50, 0xcc,
	0xfc, 0x74, 0xaa, 0x83, 0x13, 0x91, 0x49, 0xb7, 0x8f, 0xbb, 0xde, 0x00, 0xc1, 0x63, 0x31, 0xeb,
	0x1b, 0x18, 0x9d, 0xc5, 0x8c, 0xa9, 0xe3, 0xfb, 0xa3, 0x71, 0x16, 0x03, 0x42, 0xc3, 0x07, 0x0a,
	0xa5, 0xd0, 0x91, 0x92, 0x59, 0xee, 0xe7, 0xa7, 0x54, 0x2a, 0xb8, 0x1e, 0x12, 0x37, 0xac, 0x60,
	0x78, 0x8a, 0x15, 0x02, 0x06, 0x1d, 0xeb, 0x7d, 0x69, 0x10, 0xb8, 0x43, 0x13, 0x74, 0x0c, 0xd6,
	0x0f, 0x02, 0xb8, 0xcd, 0x0c, 0x9b, 0x99, 0xa2, 0x79, 0x21, 0x8d, 0xaf, 0x90, 0xca, 0xb3, 0x85,
	0x46, 0x07, 0x95, 0x7e, 0xce, 0x36, 0x44, 0x90, 0x4f, 0x45, 0x54, 0xf4, 0x4b, 0xee, 0x6b, 0x0a,
	0x14, 0x04, 0xdb, 0x6c, 0xb0, 0x10, 0x28, 0x8a, 0xb8, 0xf7, 0x66, 0x31, 0x50, 0xd8, 0xe0, 0xd7,
	0xfe, 0x57, 0x85, 0x35, 0x7a, 0xe5, 0x1e, 0x23, 0xd1, 0x6a, 0xac, 0x62, 0x3f, 0x80, 0x4a, 0x85,
	0xfa, 0x15, 0x46, 0x50, 0x17, 0x0a, 0x95, 0x5b, 0xcc, 0x09, 0x65, 0x96, 0x2b, 0x2a, 0x5e, 0x88,
	0x45, 0x4d, 0xf4, 0x46, 0x09, 0x37, 0xd4, 0x9a, 0xb1, 0x54, 0xd3, 0x30, 0x15, 0xfd, 0x95, 0xb1,
	0x52, 0xcf, 0xca, 0xa1, 0xd4, 0x0e, 0xa7, 0x9a, 0x36, 0x6a, 0xda, 0x55, 0x3b, 0x87, 0x2f, 0x1a,
	0xda, 0x3c, 0x36, 0xaf, 0xd0, 0x3d, 0x1a, 0xdc, 0x46, 0xe6, 0xf6, 0x2f, 0x8c, 0xd5, 0x8c, 0x6e,
	0x30, 0x1e, 0x5b, 0x67, 0xd3, 0xaf, 0xb0, 0x53, 0xb8, 0x6d, 0x93, 0x1a, 0xe3, 0xe9, 0xe4, 0x58,
	0x6a, 0xb3, 0xff, 0x16, 0x81, 0x2f, 0x10, 0x83, 0x33, 0x4c, 0x52, 0xa9, 0x17, 0x0b, 0x76, 0x7a,
	0x08, 0x70, 0x0a, 0x81, 0xad, 0xd7, 0xbf, 0x61, 0x57, 0xe6, 0xe4, 0x45, 0xdd, 0xcb, 0xb8, 0x64,
	0xa7, 0x10, 0x3f, 0x29, 0x7f, 0x04, 0x6a, 0xb1, 0x24, 0x94, 0x7e, 0x76, 0x22, 0xb4, 0x34, 0x3f,
	0xaa, 0x01, 0xc8, 0x00, 0x00, 0xd8, 0xc3, 0xfc, 0x25, 0x42, 0x28, 0x9d, 0x26, 0x3a, 0xc7, 0xce,
	0xac, 0xe1, 0x39, 0x85, 0xa0, 0x43, 0xf8, 0xe2, 0xb3, 0x05, 0x5a, 0x52, 0xed, 0xdc, 0xb3, 0x45,
	0x61, 0x44, 0xe6, 0x01, 0xc4, 0x6a, 0xac, 0x1b, 0x23, 0x22, 0xd8, 0xea, 0x2b, 0xbd, 0x94, 0xa0,
	0xb6, 0xc6, 0xc2, 0x4b, 0x09, 0xea, 0x2a, 0xdf, 0x1a, 0x3b, 0x77, 0x6b, 0x45, 0x1d, 0xd8, 0xfc,
	0xb5, 0x3a, 0xb0, 0x94, 0x13, 0x02, 0xc0, 0xb1, 0x4f, 0x9b, 0xe7, 0x04, 0xe4, 0x02, 0x49, 0x28,
	0x1d, 0x68, 0x31, 0x32, 0x05, 0xcd, 0x1a, 0x91, 0x2c, 0x88, 0x25, 0xcd, 0x62, 0x83, 0xb4, 0xfe,
	0x21, 0x0d, 0xd2, 0xc6, 0x7b, 0x1b, 0xa4, 0x85, 0xee, 0xce, 0xf9, 0x80, 0xee, 0xae, 0x91, 0xe5,
	0x49, 0x4a, 0xce, 0xb0, 0x89, 0xa6, 0x5e, 0xd0, 0x07, 0x79, 0x92, 0x82, 0x37, 0x78, 0xf5, 0xcc,
	0x8c, 0xe6, 0xdd, 0x1d, 0x2f, 0x77, 0x77, 0x77, 0x19, 0x2f, 0xdd, 0x9f, 0xd4, 0x13, 0x15, 0x8b,
	0xc8, 0x34, 0x70, 0x73, 0x33, 0x18, 0x1a, 0x01, 0x78, 0x45, 0x71, 0x3d, 0x96, 0xbc, 0x4d, 0x7e,
	0x68, 0xaf, 0x68, 0x4e, 0xad, 0xd9, 0xd8, 0xbe, 0x83, 0x71, 0xb8, 0xf0, 0x43, 0x13, 0xdf, 0x3d,
	0x2b, 0x2f, 0xbd, 0xbb, 0x5d, 0xa6, 0x42, 0xd4, 0xbc, 0xbb, 0x41, 0xc7, 0x08, 0x6a, 0xc5, 0x58,
	0xfa, 0x63, 0x9d, 0x62, 0x2b, 0xd7, 0xf0, 0x9a, 0x16, 0xfb, 0x51, 0xa7, 0x17, 0xca, 0x79, 0xf7,
	0x62, 0x39, 0x7f, 0xcd, 0x9c, 0x13, 0xa6, 0x84, 0xab, 0x64, 0x30, 0x00, 0x60, 0xb0, 0x2f, 0xde,
	0x27, 0xc8, 0x6c, 0x1e, 0x50, 0xe4, 0x41, 0x08, 0x6d, 0x86, 0xdf, 0x67, 0x5b, 0xe2, 0x4c, 0xa8,
	0x48, 0x50, 0xd3, 0x66, 0x53, 0xda, 0x2e, 0xc5, 0xcb, 0xb2, 0xc8, 0x24, 0xb6, 0x8f, 0xc1, 0xbb,
	0xe2, 0x58, 0x62, 0xfd, 0x81, 0x6d, 0x5f, 0xdd, 0x2b, 0x21, 0xd0, 0x25, 0x9c, 0xca, 0x19, 0xf6,
	0x77, 0x0d, 0x0f, 0x86, 0xd0, 0x85, 0x8d, 0xa2, 0x19, 0xd9, 0x3b, 0xf5, 0x71, 0xb5, 0x51, 0x34,
	0x43, 0x5b, 0x7f, 0xc4, 0x76, 0x17, 0xdd, 0xcb, 0x7f, 0xa7, 0xf2, 0x13, 0x3f, 0x19, 0x8d, 0x32,
	0x99, 0x9b, 0x8e, 0xee, 0xca, 0x82, 0xab, 0xbd, 0x51, 0xf9, 0xc9, 0x4b, 0x14, 0xf3, 0x6f, 0x99,
	0x5b, 0xf6, 0xa5, 0x85, 0xa5, 0xd4, 0xed, 0xed, 0x94, 0xfc, 0xaa, 0xb4, 0x10, 0xcf, 0x5d, 0xc5,
	0x36, 0xe3, 0x63, 0xd3, 0x07, 0x9d, 0xba, 0x50, 0xb1, 0x8d, 0x73, 0xeb, 0xac, 0xaa, 0x42, 0xf7,
	0x3a, 0x6a, 0xa9, 0xaa, 0xb0, 0xfd, 0xb7, 0x0a, 0xab, 0x5b, 0xa3, 0xc3, 0xb6, 0x67, 0xfe, 0x16,
	0x8a, 0xe3, 0x0b, 0x8e, 0x5d, 0xbd, 0xe8, 0xd8, 0x17, 0x63, 0xc9, 0xd2, 0xfb, 0x62, 0xc9, 0xff,
	0x8a, 0xda, 0xf0, 0x15, 0x8a, 0x24, 0x64, 0x0e, 0x2b, 0xe6, 0x2b, 0x84, 0x81, 0x39, 0xb4, 0xff,
	0x5c, 0x61, 0x35, 0x5b, 0x61, 0xdc, 0x61, 0x7c, 0xa4, 0x65, 0x51, 0x84, 0xf8, 0xa9, 0x92, 0x81,
	0x34, 0x8f, 0xbf, 0x0e, 0x48, 0x0c, 0xb1, 0x0f, 0x38, 0x54, 0x71, 0x0b, 0xec, 0x77, 0x12, 0x82,
	0x2a, 0xfe, 0x92, 0x8a, 0xb7, 0x59, 0xa2, 0xbf, 0x41, 0x01, 0x86, 0x18, 0x43, 0xc5, 0x02, 0x06,
	0x77, 0x5b, 0xf7, 0x5a, 0x06, 0xc4, 0xf2, 0xa5, 0xfd, 0x31, 0x5b, 0xf6, 0xa6, 0x11, 0xfa, 0x80,
	0x96, 0xa3, 0x69, 0x6c, 0x5f, 0xaf, 0xcd, 0xac, 0xfd, 0x4b, 0x85, 0xf1, 0x8b, 0x35, 0x3d, 0x1c,
	0xf1, 0x48, 0x27, 0x13, 0x7b, 0xc4, 0x30, 0x86, 0x3b, 0xc9, 0x13, 0x73, 0xb0, 0xd5, 0x3c, 0x01,
	0x8e, 0xb6, 0x0f, 0xc9, 0x15, 0x0f, 0xc7, 0xe8, 0x6a, 0x64, 0xc1, 0xcb, 0xc6, 0xd5, 0xc8, 0x6a,
	0xaf, 0xb1, 0x86, 0x29, 0xa0, 0x54, 0x68, 0x82, 0x7d, 0x9d, 0x80, 0x5e, 0xd8, 0x3e, 0x60, 0xdb,
	0x58, 0x39, 0x52, 0x91, 0x94, 0x1d, 0xce, 0xa8, 0x66, 0x82, 0x9b, 0x20, 0x4e, 0xf1, 0xe6, 0x5e,
	0xcc, 0xdb, 0xa7, 0xac, 0x55, 0x2e, 0xc9, 0x21, 0x03, 0x14, 0x05, 0xbc, 0x96, 0x22, 0x4b, 0x62,
	0xb3, 0xa4, 0xa8, 0xeb, 0x3d, 0x44, 0xcf, 0x77, 0x07, 0xd5, 0x0f, 0x79, 0xf4, 0xfc, 0x47, 0x95,
	0x35, 0x0a, 0x09, 0x34, 0xb6, 0xb0, 0xd6, 0x2f, 0x76, 0xb5, 0x0a, 0xd3, 0x5e, 0xc8, 0x1f, 0x32,
	0x5a, 0x44, 0x11, 0xb6, 0x8a, 0x11, 0xf6, 0xda, 0x05, 0xcd, 0x34, 0xc2, 0x60, 0xdb, 0xc8, 0xed,
	0x90, 0xef, 0xb1, 0xa6, 0x48, 0x21, 0xe3, 0x93, 0xe1, 0x2d, 0x19, 0xc3, 0x9a, 0x43, 0xf8, 0xda,
	0x2a, 0xb3, 0xc0, 0x1c, 0x2c, 0x8e, 0xf9, 0x7d, 0xb6, 0x9c, 0x8b, 0x71, 0xe6, 0x3a, 0xf8, 0x2b,
	0xde, 0xf7, 0x2d, 0x31, 0xce, 0x8e, 0xe2, 0x5c, 0xcf, 0x3c, 0x24, 0xee, 0x7e, 0xcb, 0x1a, 0x05,
	0x64, 0x43, 0x45, 0x65, 0x1e, 0x2a, 0xb6, 0xd9, 0xca, 0x99, 0x88, 0xa6, 0xd6, 0x7d, 0x68, 0xf2,
	0xb0, 0xfa, 0x5d, 0xa5, 0xfd, 0xb5, 0x39, 0x01, 0xdc, 0x6c, 0x9d, 0x2d, 0xbf, 0x48, 0x62, 0xe9,
	0x5c, 0xe2, 0xab, 0xac, 0xfa, 0xe6, 0xd0, 0xa9, 0x70, 0xc6, 0x56, 0xfb, 0x2f, 0x9f, 0xf5, 0xba,
	0x3f, 0x39, 0x55, 0x18, 0xbf, 0x1c, 0x3e, 0x3d, 0xf2, 0x06, 0xce, 0x52, 0xfb, 0x2f, 0x15, 0xc6,
	0x2f, 0xd6, 0xc5, 0xf3, 0x66, 0x48, 0x84, 0x7f, 0x9a, 0x66, 0xb9, 0x2f, 0x26, 0x58, 0xf3, 0x57,
	0x4a, 0xcd, 0x50, 0x07, 0x25, 0x1d, 0x14, 0xf0, 0x03, 0xb6, 0xb3, 0xc0, 0x2f, 0x1a, 0x45, 0xda,
	0xe7, 0x56, 0x69, 0xc5, 0x42, 0xaf, 0x48, 0x26, 0x67, 0x8a, 0x96, 0x25, 0x53, 0xfe, 0x22, 0x48,
	0xb5, 0xca, 0xed, 0xfb, 0x8c, 0xcd, 0x73, 0x37, 0x5f, 0x61, 0x95, 0x8e, 0x73, 0x09, 0xfe, 0x3c,
	0x71, 0x2a, 0xf0, 0xe7, 0xd0, 0xa9, 0xc2, 0x9f, 0x23, 0x67, 0x09, 0xfe, 0xf4, 0x9d, 0xe5, 0xdb,
	0x37, 0x59, 0xdd, 0xe6, 0x4a, 0xde, 0x64, 0xb5, 0xbe, 0xd7, 0x7b, 0xdd, 0x19, 0x1e, 0x39, 0x97,
	0xf8, 0x1a, 0x6b, 0xf4, 0x5f, 0x1d, 0x3e, 0xeb, 0x0d, 0x9e, 0x1e, 0x3d, 0x76, 0x2a, 0xb7, 0xff,
	0x59, 0x61, 0xad, 0xf2, 0x43, 0x06, 0x77, 0x58, 0xab, 0xef, 0xbd, 0x7c, 0xdd, 0x7b, 0x7c, 0xe4,
	0xf9, 0x9d, 0x7e, 0xcf, 0xb9, 0xc4, 0x77, 0xd8, 0x66, 0x81, 0x0c, 0x3a, 0x87, 0xde, 0x91, 0xff,
	0x00, 0x8e, 0xf2, 0x3d, 0xf0, 0xc0, 0xa9, 0xf2, 0x2b, 0x6c, 0x6b, 0xbe, 0xfe, 0x79, 0xe7, 0xf1,
	0xd1, 0xab, 0x81, 0xff, 0xa0, 0xe3, 0x2c, 0xf1, 0x5d, 0x76, 0xb9, 0x10, 0x0c, 0xbd, 0xce, 0xeb,
	0xa3, 0x67, 0xfd, 0x97, 0xde, 0xd0, 0x7f, 0xd0, 0x77, 0x96, 0xff, 0xab, 0xec, 0x47, 0x67, 0x85,
	0x73, 0xb6, 0x5e, 0xc8, 0x8e, 0x86, 0x47, 0xde, 0x73, 0x67, 0x75, 0x01, 0xc3, 0x3b, 0x74, 0x6a,
	0x07, 0x7d, 0xd6, 0x18, 0x3c, 0x1d, 0x48, 0x7d, 0x06, 0xbd, 0x5d, 0x97, 0xad, 0x52, 0x0d, 0xcf,
	0x8b, 0xb6, 0xe7, 0xe2, 0xbf, 0x8b, 0x76, 0xaf, 0xbd, 0x57, 0x46, 0x45, 0x7f, 0xfb, 0xd2, 0x31,
	0xfd, 0x7f, 0xed, 0xab, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x9c, 0x54, 0x2d, 0xc3, 0x76, 0x1b,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SHServiceClient is the client API for SHService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SHServiceClient interface {
	Search(ctx context.Context, in *YuetuSearchRequest, opts ...grpc.CallOption) (*YuetuSearchResponse, error)
}

type sHServiceClient struct {
	cc *grpc.ClientConn
}

func NewSHServiceClient(cc *grpc.ClientConn) SHServiceClient {
	return &sHServiceClient{cc}
}

func (c *sHServiceClient) Search(ctx context.Context, in *YuetuSearchRequest, opts ...grpc.CallOption) (*YuetuSearchResponse, error) {
	out := new(YuetuSearchResponse)
	err := c.cc.Invoke(ctx, "/protos.SHService/search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SHServiceServer is the server API for SHService service.
type SHServiceServer interface {
	Search(context.Context, *YuetuSearchRequest) (*YuetuSearchResponse, error)
}

// UnimplementedSHServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSHServiceServer struct {
}

func (*UnimplementedSHServiceServer) Search(ctx context.Context, req *YuetuSearchRequest) (*YuetuSearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}

func RegisterSHServiceServer(s *grpc.Server, srv SHServiceServer) {
	s.RegisterService(&_SHService_serviceDesc, srv)
}

func _SHService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(YuetuSearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SHServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.SHService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SHServiceServer).Search(ctx, req.(*YuetuSearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SHService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.SHService",
	HandlerType: (*SHServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "search",
			Handler:    _SHService_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
